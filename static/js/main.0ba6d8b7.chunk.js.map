{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","components/PersonInfo/PersonInfo.tsx","components/PeopleTable/PeopleTable.tsx","App.tsx","index.tsx"],"names":["Loader","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonInfo","props","person","allPeople","fatherName","motherName","slug","name","sex","born","died","mother","useMemo","find","pers","father","selectedSlug","useParams","classNames","href","PeopleTable","useState","setAllPeople","isLoading","setIsLoading","isError","setIsError","isLoaded","loadPeople","useCallback","peopleFromServer","useEffect","map","length","App","role","to","isActive","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.0ba6d8b7.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\nimport { useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person,\n  allPeople: Person[],\n}\n\nexport const PersonInfo = (props: Props) => {\n  const {\n    person,\n    allPeople,\n  } = props;\n\n  const {\n    fatherName,\n    motherName,\n    slug,\n    name,\n    sex,\n    born,\n    died,\n  } = person;\n\n  const mother = useMemo(() => {\n    return allPeople.find(pers => motherName === pers.name);\n  }, []);\n\n  const father = useMemo(() => {\n    return allPeople.find(pers => fatherName === pers.name);\n  }, []);\n\n  const { slug: selectedSlug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames(\n        { 'has-background-warning': selectedSlug === slug },\n      )}\n    >\n      <td>\n        <a\n          href={`#/people/${slug}`}\n          className={classNames({\n            'has-text-danger': sex === 'f',\n          })}\n        >\n          {name}\n        </a>\n      </td>\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother\n          ? (\n            <a\n              href={`#/people/${mother.slug}`}\n              className=\"has-text-danger\"\n            >\n              {motherName }\n            </a>\n          )\n          : motherName || '-'}\n      </td>\n      <td>\n        {father\n          ? (\n            <a\n              href={`#/people/${father.slug}`}\n              className=\"has-text-link\"\n            >\n              {fatherName }\n            </a>\n          )\n          : fatherName || '-'}\n      </td>\n    </tr>\n  );\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { PersonInfo } from '../PersonInfo/PersonInfo';\n\nexport const PeopleTable = () => {\n  const [allPeople, setAllPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const isLoaded = !isLoading && !isError;\n\n  const loadPeople = useCallback(async () => {\n    setIsError(false);\n    setIsLoading(true);\n\n    try {\n      const peopleFromServer = await getPeople();\n\n      setAllPeople(peopleFromServer);\n    } catch {\n      setIsError(true);\n    }\n\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {isLoading && <Loader />}\n        <table\n          data-cy=\"peopleTable\"\n          className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n        >\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Sex</th>\n              <th>Born</th>\n              <th>Died</th>\n              <th>Mother</th>\n              <th>Father</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {allPeople?.map(person => (\n              <PersonInfo\n                person={person}\n                allPeople={allPeople}\n              />\n            ))}\n          </tbody>\n        </table>\n        {(allPeople.length === 0 && isLoaded) && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n\n        {isError && (\n          <p\n            data-cy=\"peopleLoadingError\"\n            className=\"has-text-danger\"\n          >\n            Something went wrong\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport {\n  Navigate,\n  NavLink,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport { PeopleTable } from './components/PeopleTable/PeopleTable';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<h1 className=\"title\">Home Page</h1>}\n          />\n\n          <Route\n            path=\"home\"\n            element={<Navigate to=\"/\" replace />}\n          />\n\n          <Route path=\"people\">\n            <Route index element={<PeopleTable />} />\n            <Route path=\":slug\" element={<PeopleTable />} />\n          </Route>\n\n          <Route\n            path=\"*\"\n            element={<h1 className=\"title\">Page not found</h1>}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}